services:
  php-api:
    container_name: api-laravel
    env_file:
        - ./api/laravel/.env
        - ./.env
    build:
      dockerfile: dev.Dockerfile
      args:
        - uid=${HOST_UID:-1000}
        - user=${HOST_USER:-takeshi}
        - gid=${HOST_GID:-1000}
        - app_root=${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
        - redis_version=${REDIS_VERSION:-6.0.2}
        - php_version=${PHP_VERSION:-8.2}
        - debug=${BACKEND_DEBUG:-yes}
        - tz=${TIMEZONE:-Etc/UTC}
    environment:
      - XDEBUG_CONFIG=${XDEBUG_INIT_CONF:-client_host=172.177.0.1}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=33060
      - DB_DATABASE=${MYSQL_DB_NAME}
      - DB_USERNAME=${MYSQL_DB_USER:-laravel}
      - DB_PASSWORD=${MYSQL_DB_PASS:-}
      - APP_ENV=local
      - APP_DEBUG=${BACKEND_DEBUG:-true}
      - REDIS_HOST=redis
      - MOCK_DATA=${MOCK_DATA:-no}
    volumes:
      - ./api/laravel:${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - laravel_net
    ports:
      - "8000:80"
    working_dir: ${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
    tty: true

  api-gateway:
    build:
      context: ./api/gateway
      args:
        - node_version=${APP_NODE_VERSION}
        - app_root=/home/${HOST_USER}/nuxt
        - uid=${HOST_UID:-1000}
        - user=${HOST_USER}
        - gid=${HOST_GID:-1000}
        - debug=${GATEWAY_DEBUG:-no}
        - pnpm_version=${PNPM_VERSION:-latest}
    env_file: ./.env
    networks:
      - laravel_net
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./api/gateway:/home/${HOST_USER}/nuxt
    tty: true

  mysql:
    image: mysql:8.0.37
    restart: on-failure
    tty: true
    command:
      - --mysqlx=OFF
      - --user=mysql:${HOST_GID}
      - --host_cache_size=0
    ports:
      # - "3306:3306"
      - "33060:33060"
    environment:
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_DB_PASS}
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_ROOT_HOST=%
      - MYSQL_LOG_CONSOLE=true
      - TZ=EEST
    networks:
      - laravel_net
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/laravel.cnf:cached
      - ./docker/mysql/data/:/var/lib/mysql/
      # - ./docker/mysql/log/mysql.log:/var/log/mysql/mysql.log
      - ./docker/mysql/log/error.log:/var/log/mysql/error.log
      # - ./docker/mysql/log/mysql-slow.log:/var/lib/mysql/mysql-slow.log
    #user: ${HOST_UID}:${HOST_GID}

  redis:
    image: redis:${REDIS_VERSION:-6.0.2}-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    sysctls:
      net.core.somaxconn: 1024
    networks:
      - laravel_net
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:cached

  php-composer:
    container_name: php-composer
    build:
      context: .
      dockerfile: cli.Dockerfile
      args:
        - uid=${HOST_UID:-1000}
        - gid=${HOST_GID:-1000}
        - user=${HOST_USER}
        - app_root=${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
        - php_version=${PHP_VERSION:-8.2}
        - debug=${BACKEND_DEBUG:-}
        - tz=${TIMEZONE:-Etc/UTC}
        - redis_version=${REDIS_VERSION:-6.0.2}
    environment:
      - XDEBUG_SESSION=1
    depends_on:
      - php-api
    volumes:
      - ./api/laravel:${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
    entrypoint: [ "composer" ]
    networks:
      - laravel_net

  php-artisan:
    container_name: php-artisan
    build:
      context: .
      dockerfile: cli.Dockerfile
      args:
        - uid=${HOST_UID:-1000}
        - user=${HOST_USER}
        - gid=${HOST_GID:-1000}
        - app_root=${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
        - php_version=${PHP_VERSION:-8.2}
        - debug=${BACKEND_DEBUG:-}
        - tz=${TIMEZONE:-Etc/UTC}
        - redis_version=${REDIS_VERSION:-6.0.2}
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=33060
      - DB_DATABASE=${MYSQL_DB_NAME}
      - DB_USERNAME=${MYSQL_DB_USER:-laravel}
      - DB_PASSWORD=${MYSQL_DB_PASS:-}
      - APP_ENV=local
      - APP_DEBUG=true
      - REDIS_HOST=redis
      - MOCK_DATA=${MOCK_DATA:-no}
      - XDEBUG_SESSION=1
    env_file: ./.env
    volumes:
      - ./api/laravel:${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}
    depends_on:
      - mysql
      - php-api
    entrypoint: [ "php", "${BACKEND_ROOT:-/var/www/html}/${LARAVEL_APP_NAME}/artisan" ]
    networks:
      - laravel_net

  ui-vue:
    build:
      context: ./ui/vue
      args:
        - node_version=${APP_NODE_VERSION}
        - app_root=${FRONTEND_ROOT:-/src}
        - uid=${HOST_UID:-1000}
        - user=${HOST_USER}
        - gid=${HOST_GID:-1000}
        - debug=${UI_DEBUG:-no}
        - pnpm_version=${PNPM_VERSION:-latest}
    env_file: ./.env
    ports:
      - "5173:5173"
    working_dir: ${FRONTEND_ROOT:-/src}
    networks:
      - laravel_net
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./ui/vue:${FRONTEND_ROOT:-/src}
      # - npm_logs:/home/${HOST_USER}/.npm/_logs/
    depends_on:
      - php-api
      - api-gateway

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
  #   networks:
  #     - laravel_net

  phpmyadmin:
    image: phpmyadmin:fpm-alpine
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=${MYSQL_PORT:-3306}
      - PMA_USER=${MYSQL_USER:-laravel}
      - PMA_PASSWORD=${MYSQL_DB_PASS}
      - PMA_UPLOADDIR=/tmp/phpmyadmin
      - PMA_PMADB=phpmyadmin
    networks:
      - laravel_net
    depends_on:
      - mysql

volumes:
  mysql_data:
  redis_data:
  npm_logs:

networks:
  laravel_net:
    ipam:
      config:
        - subnet: 172.177.0.0/24